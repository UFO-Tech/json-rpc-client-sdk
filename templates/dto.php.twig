<?php

use Ufo\RpcSdk\Interfaces\ISdkMethodClass;
use Ufo\RpcSdk\Maker\Definitions\MethodDefinition;

echo '<?php' . PHP_EOL ?>
/**
* Auto generated DTO class for easy usage SDK for RPC API <?= $vendor['name'] . PHP_EOL ?>
<?php require 'docs.php.twig';?>
*/
<?php require 'namespace.php.twig';?>

class <?= $class_name_full ?> implements IArrayConvertible, IArrayConstructible<?= PHP_EOL ?>
{
    use ArrayConstructibleTrait, ArrayConvertibleTrait;

<?php
foreach ($properties as $name => $type) {
?>
<?= ($propertiesDocs[$name] ?? false) ? PHP_EOL . "    /** @var " . $propertiesDocs[$name] . " */" . PHP_EOL : ''; ?>
    public <?=$type?> $<?=$name?><?= $propertiesDefaults[$name] ?? '' ?>;
<?php
}
foreach ($methods as $name => $method) {
    /**
     * @var MethodDefinition $method
     */
    $args = $method->getArgumentsSignature()
    ?>
    /**
    * @method <?= $class_name ?>.<?= $method->getName() . PHP_EOL?>
    *
<?php
if ($args) {
foreach (explode(', ', $args) as $arg) {
?>
    * @param <?= $arg . PHP_EOL ?>
<?php
}
}
?>
    * @return <?= implode('|', $method->getReturns()) . PHP_EOL ?>
    */
    #[ApiMethod('<?=$method->getApiProcedure() ?>')]
    public function <?= $method->getName() ?>(<?= $args ?>)<?= !empty($method->getReturns()) ? ': ' . implode('|', $method->getReturns()) : '' ?> <?= PHP_EOL ?>
    {
        return $this->requestApi()->getResult();
    }

<?php
}

?>
}
