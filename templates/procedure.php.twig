<?php

use Ufo\RpcObject\Transformer\Transformer;
use Ufo\RpcSdk\Interfaces\ISdkMethodClass;
use Ufo\RpcSdk\Maker\Definitions\MethodDefinition;

?>
<?= '<?php' . PHP_EOL ?>
/**
* Auto generated SDK class for easy usage RPC API <?= $vendor['name'] . PHP_EOL ?>
<?php require 'docs.php.twig';?>
*/
<?php require 'namespace.php.twig';?>

#[AutoconfigureTag('<?= ISdkMethodClass::TAG ?>')]
class <?= $class_name_full ?><?= PHP_EOL ?>
{
<?php
foreach ($methods as $name => $method) {
    /**
     * @var MethodDefinition $method
     */
    $args = $method->getArgumentsSignature();
    $argsAttr = $method->getArgumentsSignature(true);
    ?>
    /**
    * @method '<?= $method->getApiProcedure() . "'" . PHP_EOL; ?>
    *
<?php
if ($args) {
    foreach (explode(', ', $args) as $arg) {
?>
    * @param <?= $arg . PHP_EOL ?>
<?php
    }
}
$returns = 'true';
if (!$async) {
    $returns = $method->getReturnsDoc();
}
?>
    * @return <?= $returns . PHP_EOL ?>
    */
    #[ApiMethod('<?=$method->getApiProcedure() ?>')]
    public function <?= $method->getName() ?>(<?= $argsAttr ?>)<?php require ($async ? 'a':'') . 'sync_method.php.twig'; ?>

<?php
}

?>
}
